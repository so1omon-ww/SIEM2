#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –∞–≥–µ–Ω—Ç–æ–≤ –∏ —Å–±–æ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö
"""

import requests
import json
import sys
from datetime import datetime

def check_server_status():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–µ—Ä–∞ SIEM"""
    try:
        headers = {"X-API-Key": "690023318602ee078fb6d5cbe2a17f8bd5d99a8e4899d8765c5ad23828938beb"}
        response = requests.get("http://localhost:8000/api/dashboard/stats", headers=headers, timeout=5)
        if response.status_code == 200:
            return True, response.json()
        else:
            return False, f"HTTP {response.status_code}"
    except Exception as e:
        return False, str(e)

def check_agents():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç–∞—Ç—É—Å –∞–≥–µ–Ω—Ç–æ–≤"""
    try:
        headers = {"X-API-Key": "690023318602ee078fb6d5cbe2a17f8bd5d99a8e4899d8765c5ad23828938beb"}
        response = requests.get("http://localhost:8000/api/network/agents", headers=headers, timeout=5)
        if response.status_code == 200:
            return True, response.json()
        else:
            return False, f"HTTP {response.status_code}"
    except Exception as e:
        return False, str(e)

def check_events():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è"""
    try:
        headers = {"X-API-Key": "690023318602ee078fb6d5cbe2a17f8bd5d99a8e4899d8765c5ad23828938beb"}
        response = requests.get("http://localhost:8000/api/events/recent?limit=10", headers=headers, timeout=5)
        if response.status_code == 200:
            return True, response.json()
        else:
            return False, f"HTTP {response.status_code}"
    except Exception as e:
        return False, str(e)

def check_alerts():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∞–ª–µ—Ä—Ç—ã"""
    try:
        headers = {"X-API-Key": "690023318602ee078fb6d5cbe2a17f8bd5d99a8e4899d8765c5ad23828938beb"}
        response = requests.get("http://localhost:8000/api/alerts/recent?limit=10", headers=headers, timeout=5)
        if response.status_code == 200:
            return True, response.json()
        else:
            return False, f"HTTP {response.status_code}"
    except Exception as e:
        return False, str(e)

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üõ°Ô∏è SIEM System - –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∞–≥–µ–Ω—Ç–æ–≤")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–µ—Ä–≤–µ—Ä
    print("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–µ—Ä–≤–µ—Ä SIEM...")
    server_ok, server_data = check_server_status()
    if server_ok:
        print("‚úÖ –°–µ—Ä–≤–µ—Ä SIEM —Ä–∞–±–æ—Ç–∞–µ—Ç")
        print(f"   –ê–∫—Ç–∏–≤–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π: {server_data.get('activeEvents', 0)}")
        print(f"   –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —É–≥—Ä–æ–∑: {server_data.get('blockedThreats', 0)}")
        print(f"   –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –∞–ª–µ—Ä—Ç–æ–≤: {server_data.get('criticalAlerts', 0)}")
    else:
        print(f"‚ùå –°–µ—Ä–≤–µ—Ä SIEM –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {server_data}")
        return
    
    print()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≥–µ–Ω—Ç–æ–≤
    print("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≥–µ–Ω—Ç–æ–≤...")
    agents_ok, agents_data = check_agents()
    if agents_ok:
        agents = agents_data.get('data', [])
        if agents:
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ –∞–≥–µ–Ω—Ç–æ–≤: {len(agents)}")
            for agent in agents:
                status_icon = "üü¢" if agent.get('status') == 'online' else "üî¥"
                print(f"   {status_icon} {agent.get('name', 'Unknown')} ({agent.get('ip', 'Unknown')}) - {agent.get('status', 'Unknown')}")
        else:
            print("‚ö†Ô∏è –ê–≥–µ–Ω—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∞–≥–µ–Ω—Ç–æ–≤: {agents_data}")
    
    print()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–±—ã—Ç–∏—è
    print("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–±—ã—Ç–∏—è...")
    events_ok, events_data = check_events()
    if events_ok:
        events = events_data.get('items', [])
        if events:
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ —Å–æ–±—ã—Ç–∏–π: {len(events)}")
            for event in events[:5]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 5
                timestamp = event.get('timestamp', 'Unknown')
                event_type = event.get('event_type', 'Unknown')
                severity = event.get('severity', 'info')
                print(f"   üìÖ {timestamp} | {event_type} | {severity}")
        else:
            print("‚ö†Ô∏è –°–æ–±—ã—Ç–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ–±—ã—Ç–∏–π: {events_data}")
    
    print()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–ª–µ—Ä—Ç—ã
    print("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–ª–µ—Ä—Ç—ã...")
    alerts_ok, alerts_data = check_alerts()
    if alerts_ok:
        alerts = alerts_data.get('items', [])
        if alerts:
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ –∞–ª–µ—Ä—Ç–æ–≤: {len(alerts)}")
            for alert in alerts[:5]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 5
                timestamp = alert.get('timestamp', 'Unknown')
                alert_type = alert.get('alert_type', 'Unknown')
                severity = alert.get('severity', 'info')
                print(f"   üö® {timestamp} | {alert_type} | {severity}")
        else:
            print("‚ö†Ô∏è –ê–ª–µ—Ä—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∞–ª–µ—Ä—Ç–æ–≤: {alerts_data}")
    
    print()
    print("=" * 50)
    
    # –û–±—â–∏–π —Å—Ç–∞—Ç—É—Å
    if server_ok and agents_ok and events_ok:
        print("‚úÖ –°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        print("üåê –û—Ç–∫—Ä–æ–π—Ç–µ http://localhost:3000 –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞")
    else:
        print("‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã –≤ —Ä–∞–±–æ—Ç–µ —Å–∏—Å—Ç–µ–º—ã")
        print("üí° –ó–∞–ø—É—Å—Ç–∏—Ç–µ –∞–≥–µ–Ω—Ç–æ–≤: python scripts/start_real_agents.py")

if __name__ == "__main__":
    main()
